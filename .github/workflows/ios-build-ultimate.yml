name: iOS Build (Ultimate Fix)

on:
  workflow_dispatch:  # Manual trigger only
  
jobs:
  ios-build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Setup Expo CLI
      run: |
        npm install -g @expo/cli @react-native-community/cli
        
    - name: Remove existing iOS folder
      run: |
        echo "=== Removing existing iOS folder ==="
        rm -rf ios
        
    - name: Generate iOS files
      run: |
        echo "=== Generating iOS files with expo prebuild ==="
        npx expo prebuild --platform ios --clean
        
    - name: Check what was generated
      run: |
        echo "=== Checking generated iOS files ==="
        ls -la ios/ || echo "iOS folder not created"
        ls -la ios/Podfile || echo "No Podfile found"
        
    - name: Create Podfile manually if missing
      run: |
        if [ ! -f "ios/Podfile" ]; then
          echo "=== Creating Podfile manually ==="
          cd ios
          cat > Podfile << 'EOF'
        require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
        require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
        
        platform :ios, '13.0'
        install! 'cocoapods', :deterministic_uuids => false
        
        target 'PolyglotKey' do
          use_expo_modules!
          config = use_native_modules!
          
          use_react_native!(
            :path => config[:reactNativePath],
            :hermes_enabled => true,
            :fabric_enabled => false,
            # An absolute path to your application root.
            :app_path => "#{Pod::Config.instance.installation_root}/.."
          )
          
          target 'PolyglotKeyTests' do
            inherit! :complete
            # Pods for testing
          end
          
          post_install do |installer|
            react_native_post_install(
              installer,
              config[:reactNativePath],
              :mac_catalyst_enabled => false
            )
          end
        end
        EOF
          echo "=== Podfile created manually ==="
          cat Podfile
        else
          echo "=== Podfile already exists ==="
          cat ios/Podfile
        fi
        
    - name: Install CocoaPods
      run: |
        sudo gem install cocoapods
        
    - name: Install iOS dependencies
      run: |
        cd ios
        echo "=== Running pod install ==="
        pod install --repo-update --verbose
        
    - name: List workspace
      run: |
        cd ios
        echo "=== Checking workspace ==="
        ls -la *.xcworkspace
        
    - name: Build iOS
      run: |
        cd ios
        echo "=== Building iOS project ==="
        xcodebuild -workspace PolyglotKey.xcworkspace -scheme PolyglotKey -configuration Debug -destination 'platform=iOS Simulator,name=iPhone 14' build
        
    - name: Success - Upload artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-success
        path: |
          ios/build/
          ios/Podfile
          ios/Podfile.lock
          
    - name: Failure - Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-logs
        path: |
          ios/
          ~/Library/Logs/DiagnosticReports/ 